Membre d'archive inclu pour satisfaire la référence par fichier (symbole)

/usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o (exit)
/usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocation des symboles communs
Symbole commun      taille            fichier

command             0x1               main.o
x_ready             0x1               main.o
y_ready             0x1               main.o

Configuration mémoire

Nom              Origine            Longueur           Attributs
text             0x0000000000000000 0x0000000000001000 xr
data             0x0000000000800100 0x0000000000000100 rw !x
eeprom           0x0000000000810000 0x0000000000000100 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Script de l'éditeurs de liens and table de projection mémoire

Adresse de la section .data initialisé à 0x800100
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/libattiny441.a
END GROUP
                [0x0000000000000000]                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800100]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000001000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                [0x0000000000000100]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000100]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x1ce
 *(.vectors)
 .vectors       0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000003c                . = ALIGN (0x2)
                0x000000000000003c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000003c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000003c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000000000003c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000003c                __ctors_start = .
 *(.ctors)
                0x000000000000003c                __ctors_end = .
                0x000000000000003c                __dtors_start = .
 *(.dtors)
                0x000000000000003c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000003c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
                0x000000000000003c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000003c        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
                0x000000000000005c                __vector_22
                0x000000000000005c                __vector_28
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_24
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_6
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_23
                0x000000000000005c                __vector_25
                0x000000000000005c                __vector_11
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_19
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_27
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_21
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_29
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_26
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
                0x000000000000005c                __vector_20
 .text          0x000000000000005e       0xac main.o
                0x0000000000000088                adc_setup
                0x00000000000000aa                adc_sleep
                0x00000000000000ae                adc_wake
                0x00000000000000b2                adc_single_conversion
                0x00000000000000bc                twi_data_from_master
                0x00000000000000c8                twi_data_to_master
                0x00000000000000f2                twi_stop_callback
                0x00000000000000fa                twi_address_callback
                0x0000000000000102                timer1_callback
 .text          0x000000000000010a        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text          0x000000000000010a        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                0x000000000000010a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000010a       0xc0 main.o
                0x000000000000010a                main
 .text.libgcc.mul
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
                0x00000000000001ca                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000001ca        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
                0x00000000000001ca                exit
                0x00000000000001ca                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000001ca        0x4 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000001ce                _etext = .

.data           0x0000000000800100        0x0 address de chargement 0x00000000000001ce
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x7
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o
 .bss           0x0000000000800100        0x4 main.o
                0x0000000000800100                state
                0x0000000000800101                wake_source_timer1
                0x0000000000800102                sleep_when_idle
                0x0000000000800103                sleep_with_timer
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_exit.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/5.4.0/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800104        0x3 main.o
                0x0000000000800104                command
                0x0000000000800105                x_ready
                0x0000000000800106                y_ready
                0x0000000000800107                PROVIDE (__bss_end, .)
                0x00000000000001ce                __data_load_start = LOADADDR (.data)
                0x00000000000001ce                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800107        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800107                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xac8
 *(.stab)
 .stab          0x0000000000000000      0xac8 main.o

.stabstr        0x0000000000000000      0xeb9
 *(.stabstr)
 .stabstr       0x0000000000000000      0xeb9 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (taille avant relaxe)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x75c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x75c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o

.debug_abbrev   0x0000000000000000      0x6f6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x6f6 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x2a5
 *(.debug_str)
 .debug_str     0x0000000000000000      0x2a5 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr25/crtattiny441.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
